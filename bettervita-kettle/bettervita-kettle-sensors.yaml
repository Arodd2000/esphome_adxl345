substitutions:
  pin_ntc_vcc: GPIO26
  pin_ntc_adc: GPIO34
  pin_vcc_adc: GPIO32
  pin_battery_voltage: GPIO33
  pin_kettle_in_base: GPIO13
  attenuation_ntc_adc: auto
  attenuation_vcc_adc: auto
  attenuation_battery_voltage: auto
  battery_calibration_lower: 0.0 -> 0.0
  battery_calibration_upper: 1.856 -> 3.8

interval:
  - interval: 100ms
    then:
      - switch.turn_on: ntc_vcc
      - component.update: vcc_adc
      - component.update: ntc_adc
      - switch.turn_off: ntc_vcc

sensor:
  - platform: adc
    id: ntc_adc
    pin: ${pin_ntc_adc}
    attenuation: ${attenuation_ntc_adc}
    update_interval: never

  - platform: adc
    id: vcc_adc
    pin: ${pin_vcc_adc}
    attenuation: ${attenuation_vcc_adc}
    update_interval: never
    filters:
      multiply: 3.0
    on_value:
      lambda: id(ntc_res).set_reference_voltage(x);

  - platform: resistance
    id: ntc_res
    name: "${name_verbose} NTC Resistance"
    sensor: ntc_adc
    configuration: DOWNSTREAM
    resistor: 330kOhm
    filters:
      - median:
          window_size: 7
          send_every: 5
          send_first_at: 3

  - platform: ntc
    id: water_temperature
    name: "${name_verbose} Kettle Temperature"
    sensor: ntc_res
    calibration:
      - 7.675 kOhm -> 96.4째C
      - 101.5kOhm -> 23.0째C
      - 275.0kOhm -> 2.5째C
    unit_of_measurement: "째C"
    device_class: "temperature"

  - platform: adc
    id: battery_voltage
    name: "${name_verbose} Battery Voltage"
    pin: ${pin_battery_voltage}
    attenuation: ${attenuation_battery_voltage}
    update_interval: 60s
    filters:
      - calibrate_linear:
          - ${battery_calibration_lower}
          - ${battery_calibration_upper}
    on_value:
      then:
        - sensor.template.publish:
            id: battery_level
            state: !lambda |-
              if (x >= 4.2) {
                return 100.0;
              } else if (x < 4.2 && x > 3.4) {
                return 100.0 - ((4.2 - x) / 0.8 * 100.0);
              } else {
                return 0.0;
              }
    unit_of_measurement: "V"
    device_class: "voltage"

  - platform: template
    id: battery_level
    name: "${name_verbose} Battery Level"
    update_interval: never
    unit_of_measurement: "%"
    device_class: "battery"

switch:
  - platform: gpio
    id: ntc_vcc
    pin: ${pin_ntc_vcc}

binary_sensor:
  - platform: gpio
    id: kettle_in_base
    name: "${name_verbose} Docked"
    device_class: plug
    pin:
      number: ${pin_kettle_in_base}
      mode:
        input: true
        pulldown: true
      inverted: false

