esp32_ble_tracker:

ble_client:
    mac_address: ${kettle_mac}
    id: ble_kettle
    on_connect:
      if:
        condition:
          lambda: return id(kettle_mode).state.compare("idle");
        then:
          - display.page.show: main_page
        else:
          - display.page.show: display_off
    on_disconnect:
      then:
        - display.page.show: kettle_disconnected
        - binary_sensor.template.publish:
            id: kettle_in_base
            state: false

binary_sensor:
  - platform: template
    id: kettle_in_base
    name: ${name_verbose} Kettle in Base
    on_state:
      if:
        condition:
          lambda: return !id(kettle_mode).state.compare("idle");
        then:
          select.set:
            id: kettle_mode
            option: standby

  - platform: template
    id: kettle_button
    name: ${name_verbose} Kettle Button
    on_click:
      script.execute: timer_toggle
    on_multi_click:
      - timing:
          - ON for at least 1s
        then:
          script.execute: timer_reset


  - platform: template
    id: kettle_tilted
    name: ${name_verbose} Kettle Tilted
    on_press:
      then:
        - if:
            condition:
              - binary_sensor.is_off: timer_active
              - binary_sensor.is_off: timer_reached
              - binary_sensor.is_on: temperature_reached
              - lambda: return !id(kettle_mode).state.compare("heat up & hold");
            then:
              script.execute: timer_toggle

sensor:
  - platform: ble_client
    ble_client_id: ble_kettle
    id: water_temperature
    name: "${name_verbose} Water Temperature"
    service_uuid: F79E6A9B-B3A2-4151-A318-E01CBCFE9FCE
    characteristic_uuid: 00002A6E-0000-1000-8000-00805F9B34FA
    notify: true
    update_interval: 1s
    unit_of_measurement: "Â°C"
    device_class: "temperature"
    state_class: "measurement"
    lambda: "return *(float *)(&x[0]);"

  - platform: ble_client
    internal: true
    update_interval: 1s
    id: ble_kettle_in_base
    ble_client_id: ble_kettle
    service_uuid: F79E6A9B-B3A2-4151-A318-E01CBCFE9FCE
    characteristic_uuid: 75618FBB-C35B-4BF4-A418-94E5008329F2
    notify: true
    lambda: |-
      bool is_kettle_in_base = (x[0] != 0);
      id(kettle_in_base).publish_state(is_kettle_in_base);
      return x[0];

  - platform: ble_client
    id: ble_battery_level
    ble_client_id: ble_kettle
    name: "${name_verbose} Battery Level"
    service_uuid: 0000180F-0000-1000-8000-00805F9B34FA
    characteristic_uuid: 00002A19-0000-1000-8000-00805F9B34FA
    notify: true
    update_interval: 30s
    unit_of_measurement: "%"
    device_class: "battery"
    state_class: "measurement"
    lambda: "return *(float *)(&x[0]);"

  - platform: ble_client
    ble_client_id: ble_kettle
    name: "${name_verbose} Battery Voltage"
    service_uuid: 0000180F-0000-1000-8000-00805F9B34FA
    characteristic_uuid: 00002B18-0000-1000-8000-00805F9B34FA
    notify: true
    update_interval: 30s
    accuracy_decimals: 1
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    lambda: "return *(float *)(&x[0]);"

  - platform: ble_client
    id: kettle_button_raw
    ble_client_id: ble_kettle
    service_uuid: F2F807C2-5986-436B-8516-092175BE8B61
    characteristic_uuid: E9A1C076-1EE1-4A21-8F52-9150AD3E4AB6
    notify: true
    update_interval: 250ms
    lambda: |-
      bool button_pushed = (x[0] != 0);
      id(kettle_button).publish_state(button_pushed);
      return x[0];

  - platform: ble_client
    id: kettle_tilted_raw
    ble_client_id: ble_kettle
    service_uuid: ABFE4264-1A3E-40E6-890C-2B96FF4788CA
    characteristic_uuid: 4147E8E1-05D1-474D-8314-22FD95DC7330
    notify: true
    update_interval: 1s
    lambda: |-
      bool is_kettle_tilted = (x[0] != 0);
      id(kettle_tilted).publish_state(is_kettle_tilted);
      return x[0];

output:
  - platform: ble_client
    id: kettle_led_output
    ble_client_id: ble_kettle
    service_uuid: F2F807C2-5986-436B-8516-092175BE8B61
    characteristic_uuid: 775C8EF2-7115-4A90-AF3C-7E7F3883C2E7

light:
  - platform: binary
    id: kettle_led
    name: ${name_verbose} Kettle LED
    output: kettle_led_output

